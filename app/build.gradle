apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

ext.versions = [
		// Android
		targetSdkVersion: 27,
		minSdkVersion   : 16,
		buildtools      : "27.0.1",
		support         : "27.0.2",

		// Components
		constraintlayout: "1.0.2",

		//Rx
		rxJava          : "2.0.1",

		//RetroFit
		retroFit        : "2.3.0",

		//Dagger2
		dagger2         : "2.11",

		//Glide
		glide           : "4.0.0-RC1",

		//Architecture components
		archComp        : "1.0.0",

		//ButterKnife
		butterKnife     : "8.7.0",

		//Timber
		timber          : "4.6.0",

		logInterceptor  : "3.8.1"
]

def versionMajor = 0
def versionMinor = 1
def versionPatch = 0

android {
	compileSdkVersion versions.targetSdkVersion
	buildToolsVersion versions.buildtools
	defaultConfig {
		applicationId "com.dimowner.goodweather"
		minSdkVersion versions.minSdkVersion
		targetSdkVersion versions.targetSdkVersion
		versionCode versionMajor * 10000 + versionMinor * 100 + versionPatch
		versionName "${versionMajor}.${versionMinor}.${versionPatch}"
		testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
		vectorDrawables.useSupportLibrary = true
	}
	buildTypes {
		release {
			minifyEnabled false
			proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
		}
	}
	flavorDimensions "default"

	productFlavors {
		debugConfig {
			dimension "default"
			minSdkVersion 16
			applicationId "com.dimowner.goodweather.debug"
			targetSdkVersion 27
			minSdkVersion versions.minSdkVersion
			targetSdkVersion versions.targetSdkVersion
		}
		releaseConfig {
			dimension "default"
			minSdkVersion 16
			applicationId "com.dimowner.goodweather"
			targetSdkVersion 27
			minSdkVersion versions.minSdkVersion
			targetSdkVersion versions.targetSdkVersion
		}
	}

	compileOptions {
		sourceCompatibility JavaVersion.VERSION_1_8
		targetCompatibility JavaVersion.VERSION_1_8
	}
}

repositories {
	mavenCentral()
}

kapt {
	generateStubs = true
}

// Remove not needed buildVariants.
android.variantFilter { variant ->
	if (variant.buildType.name == 'release'
			&& variant.getFlavors().get(0).name == 'debugConfig') {
		variant.setIgnore(true)
	}
	if (variant.buildType.name == 'debug'
			&& variant.getFlavors().get(0).name == 'releaseConfig') {
		variant.setIgnore(true)
	}
}

dependencies {
	compile fileTree(include: ['*.jar'], dir: 'libs')

	//Kotlin
	implementation "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"

	// Android
	implementation "com.android.support:support-v4:$versions.support"
	implementation "com.android.support:appcompat-v7:$versions.support"
	implementation "com.android.support:design:$versions.support"
	implementation "com.android.support:support-annotations:$versions.support"
	implementation "com.android.support:support-dynamic-animation:$versions.support"
	implementation "com.android.support:palette-v7:$versions.support"

	// Android: Components
	implementation "com.android.support.constraint:constraint-layout:$versions.constraintlayout"
	implementation "com.android.support.constraint:constraint-layout-solver:$versions.constraintlayout"

	// Rx
	implementation "io.reactivex.rxjava2:rxjava:$versions.rxJava"
	implementation "io.reactivex.rxjava2:rxandroid:$versions.rxJava"

	//RetroFit
	implementation "com.squareup.retrofit2:retrofit:$versions.retroFit"
	implementation "com.squareup.retrofit2:converter-gson:$versions.retroFit"
	implementation "com.squareup.retrofit2:adapter-rxjava2:$versions.retroFit"
	implementation "com.squareup.okhttp3:logging-interceptor:$versions.logInterceptor"

	//Dagger2
	implementation "com.google.dagger:dagger:$versions.dagger2"
	annotationProcessor "com.google.dagger:dagger-compiler:$versions.dagger2"
	kapt "com.google.dagger:dagger-compiler:$versions.dagger2"
	compile 'com.google.dagger:dagger:2.14.1'

	//Glide
	implementation "com.github.bumptech.glide:glide:$versions.glide"

	//Architecture components
	implementation "android.arch.lifecycle:runtime:$versions.archComp"
	implementation "android.arch.lifecycle:extensions:$versions.archComp"
	annotationProcessor "android.arch.lifecycle:compiler:$versions.archComp"

	//Room
	implementation "android.arch.persistence.room:runtime:$versions.archComp"
	implementation "android.arch.persistence.room:rxjava2:$versions.archComp"
	annotationProcessor "android.arch.persistence.room:compiler:$versions.archComp"

	//Timber
	implementation "com.jakewharton.timber:timber:$versions.timber"

	testCompile 'junit:junit:4.12'
	testCompile 'org.mockito:mockito-core:2.9.0'

	testImplementation 'junit:junit:4.12'
	androidTestImplementation 'com.android.support.test:runner:1.0.1'
	androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'
}
