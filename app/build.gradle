apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

ext.versions = [
		// Android
		targetSdkVersion: 28,
		minSdkVersion   : 21,
		buildtools      : "28.0.3",
		support         : "28.0.0",
		gmsVersion      : "16.0.0",

		// Components
		constraintlayout: "1.1.3",

		//Rx
		rxJava          : "2.1.0",

		//RetroFit
		retroFit        : "2.3.0",

		//Dagger2
		dagger2         : "2.11",

		//Glide
		glide           : "4.8.0",

		//Architecture components
		archComp        : "1.1.1",

		//Timber
		timber          : "4.7.0",

		//Binary Preferences
		binaryPrefs		 : "1.0.1",

		logInterceptor  : "3.8.1"
]

def versionMajor = 0
def versionMinor = 2
def versionPatch = 5

android {
	compileSdkVersion versions.targetSdkVersion
	buildToolsVersion versions.buildtools
	defaultConfig {
		applicationId "com.dimowner.goodweather"
		minSdkVersion versions.minSdkVersion
		targetSdkVersion versions.targetSdkVersion
		versionCode versionMajor * 10000 + versionMinor * 100 + versionPatch
		versionName "${versionMajor}.${versionMinor}.${versionPatch}"
		testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
		vectorDrawables.useSupportLibrary = true
	}
	buildTypes {
		release {
			minifyEnabled false
			proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
		}
	}

	def keystorePropertiesFile = rootProject.file("keystore.properties")
	def keystoreProperties = new Properties()
	keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

	signingConfigs {
		dev {
			storeFile file(keystoreProperties['storeFile'])
			storePassword keystoreProperties['storePassword']
			keyAlias keystoreProperties['keyAlias']
			keyPassword keystoreProperties['keyPassword']
		}
		release {
			storeFile file(keystoreProperties['prodStoreFile'])
			storePassword keystoreProperties['prodStorePassword']
			keyAlias keystoreProperties['prodKeyAlias']
			keyPassword keystoreProperties['prodKeyPassword']
		}
	}

	buildTypes {
		release {
			minifyEnabled true
			shrinkResources true
//			useProguard true
			proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
		}
		debug {
			minifyEnabled false
		}
	}

	flavorDimensions "default"

	productFlavors {
		debugConfig {
			dimension "default"
			applicationId "com.dimowner.goodweather.debug"
			minSdkVersion versions.minSdkVersion
			targetSdkVersion versions.targetSdkVersion
			signingConfig = signingConfigs.dev
		}
		releaseConfig {
			dimension "default"
			applicationId "com.dimowner.goodweather"
			minSdkVersion versions.minSdkVersion
			targetSdkVersion versions.targetSdkVersion
			signingConfig = signingConfigs.release
		}
	}

	compileOptions {
		sourceCompatibility JavaVersion.VERSION_1_8
		targetCompatibility JavaVersion.VERSION_1_8
	}

	lintOptions {
		checkReleaseBuilds false
		// Or, if you prefer, you can continue to check for errors in release builds,
		// but continue the build even when errors are found:
		abortOnError false
	}
}

kapt {
	generateStubs = true
}

// Remove not needed buildVariants.
android.variantFilter { variant ->
	if (variant.buildType.name == 'release'
			&& variant.getFlavors().get(0).name == 'debugConfig') {
		variant.setIgnore(true)
	}
	if (variant.buildType.name == 'debug'
			&& variant.getFlavors().get(0).name == 'releaseConfig') {
		variant.setIgnore(true)
	}
}

dependencies {
	//Kotlin
	implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

	// Android
	implementation 'androidx.legacy:legacy-support-v4:1.0.0'
	implementation 'androidx.appcompat:appcompat:1.0.2'
	implementation 'com.google.android.material:material:1.0.0'
	implementation 'androidx.annotation:annotation:1.0.1'
	implementation 'androidx.dynamicanimation:dynamicanimation:1.0.0'
	implementation 'androidx.palette:palette:1.0.0'
	implementation 'com.google.android.material:material:1.0.0-beta1'

	implementation "com.google.android.gms:play-services-maps:$versions.gmsVersion"
	implementation "com.google.android.gms:play-services-places:$versions.gmsVersion"
	implementation "com.google.android.gms:play-services-location:$versions.gmsVersion"

	implementation 'com.patloew.rxlocation:rxlocation:1.0.4'

	// Android: Components
	implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
	implementation 'androidx.constraintlayout:constraintlayout-solver:1.1.3'

	// Rx
	implementation "io.reactivex.rxjava2:rxjava:$versions.rxJava"
	implementation "io.reactivex.rxjava2:rxandroid:$versions.rxJava"

	//RetroFit
	implementation "com.squareup.retrofit2:retrofit:$versions.retroFit"
	implementation "com.squareup.retrofit2:converter-gson:$versions.retroFit"
	implementation "com.squareup.retrofit2:adapter-rxjava2:$versions.retroFit"
	implementation "com.squareup.okhttp3:logging-interceptor:$versions.logInterceptor"

	//Dagger2
	implementation "com.google.dagger:dagger:$versions.dagger2"
	kapt "com.google.dagger:dagger-compiler:$versions.dagger2"
	implementation 'com.google.dagger:dagger:2.16'

	//Glide
	implementation "com.github.bumptech.glide:glide:$versions.glide"

	//Room
	implementation 'androidx.room:room-runtime:2.0.0'
	implementation 'androidx.room:room-rxjava2:2.0.0'
	kapt 'androidx.room:room-compiler:2.0.0'

	//Timber
	implementation "com.jakewharton.timber:timber:$versions.timber"

	//Binary Preferences
	implementation "com.github.yandextaxitech:binaryprefs:$versions.binaryPrefs"


	testImplementation 'org.mockito:mockito-core:2.23.0'
	testImplementation 'junit:junit:4.12'
	androidTestImplementation 'androidx.test:runner:1.1.1'
	androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.1'
}
